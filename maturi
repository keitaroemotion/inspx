#!/usr/bin/env ruby

# @author Kei Sugano
# @special_thanks Matsuri Takahashi

require 'colorize'
require 'yomu'
require 'ostruct'
require './lib/pattern.rb'

class Inspector
  def self.fileToArray(fileLocation, records= Array.new)
    f = File.open(fileLocation, "r")
    f.each_line do |line|
      records.push line   
    end
    f.close
    return records
  end

  def self.getMSFile(file)
      data = File.read(file)
      text = Yomu.read :text, data
      metadata = Yomu.read :metadata, data
      mimetype = Yomu.read :mimetype, data
      Struct.new("DocumentStatus", :metadata, :text, :mimetype)
      return Struct::DocumentStatus.new(metadata, text.split(/[\r\n]+/), mimetype)
  end 

  def self.findMatchedResults(records, pattern, results = Array.new
)
    records.each do |record| 
      if(record.include?(pattern))
        results.push record
      end
    end
    return results
  end

  def self.checkLine(line, rules, results)
    rules.each do |rule|
      results = Pattern.findMatch(rule, line, results)
    end
    return results
  end
end

rules = Inspector.fileToArray("rules/001.rule")
data  = Inspector.getMSFile("target/powerpoint/sampleppt.ppt")
arr = []
data.text.each do |line|
  arr = (Inspector.checkLine(line, rules, arr))
end

puts
puts arr
puts "----------------------"
puts rules
#puts Inspector.findMatchedResults(Inspector.fileToArray(ARGV[0]), "spring")


